// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CalcRequest1 struct {
	NumberA int32 `protobuf:"varint,1,opt,name=number_a,json=numberA" json:"number_a,omitempty"`
	NumberB int32 `protobuf:"varint,2,opt,name=number_b,json=numberB" json:"number_b,omitempty"`
}

func (m *CalcRequest1) Reset()                    { *m = CalcRequest1{} }
func (m *CalcRequest1) String() string            { return proto.CompactTextString(m) }
func (*CalcRequest1) ProtoMessage()               {}
func (*CalcRequest1) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CalcRequest1) GetNumberA() int32 {
	if m != nil {
		return m.NumberA
	}
	return 0
}

func (m *CalcRequest1) GetNumberB() int32 {
	if m != nil {
		return m.NumberB
	}
	return 0
}

type CalcReply1 struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *CalcReply1) Reset()                    { *m = CalcReply1{} }
func (m *CalcReply1) String() string            { return proto.CompactTextString(m) }
func (*CalcReply1) ProtoMessage()               {}
func (*CalcReply1) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CalcReply1) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*CalcRequest1)(nil), "protobuf.CalcRequest1")
	proto.RegisterType((*CalcReply1)(nil), "protobuf.CalcReply1")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Calculator1 service

type Calculator1Client interface {
	Plus(ctx context.Context, in *CalcRequest1, opts ...grpc.CallOption) (*CalcReply1, error)
}

type calculator1Client struct {
	cc *grpc.ClientConn
}

func NewCalculator1Client(cc *grpc.ClientConn) Calculator1Client {
	return &calculator1Client{cc}
}

func (c *calculator1Client) Plus(ctx context.Context, in *CalcRequest1, opts ...grpc.CallOption) (*CalcReply1, error) {
	out := new(CalcReply1)
	err := grpc.Invoke(ctx, "/protobuf.Calculator1/Plus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Calculator1 service

type Calculator1Server interface {
	Plus(context.Context, *CalcRequest1) (*CalcReply1, error)
}

func RegisterCalculator1Server(s *grpc.Server, srv Calculator1Server) {
	s.RegisterService(&_Calculator1_serviceDesc, srv)
}

func _Calculator1_Plus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalcRequest1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Calculator1Server).Plus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Calculator1/Plus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Calculator1Server).Plus(ctx, req.(*CalcRequest1))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calculator1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Calculator1",
	HandlerType: (*Calculator1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Plus",
			Handler:    _Calculator1_Plus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0x2e, 0x5c,
	0x3c, 0xce, 0x89, 0x39, 0xc9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x86, 0x42, 0x92, 0x5c,
	0x1c, 0x79, 0xa5, 0xb9, 0x49, 0xa9, 0x45, 0xf1, 0x89, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41,
	0xec, 0x10, 0xbe, 0x23, 0x92, 0x54, 0x92, 0x04, 0x13, 0xb2, 0x94, 0x93, 0x92, 0x0a, 0x17, 0x17,
	0xc4, 0x94, 0x82, 0x9c, 0x4a, 0x43, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x12,
	0xa8, 0x09, 0x50, 0x9e, 0x91, 0x2b, 0x17, 0x37, 0x48, 0x55, 0x69, 0x4e, 0x62, 0x49, 0x7e, 0x91,
	0xa1, 0x90, 0x19, 0x17, 0x4b, 0x40, 0x4e, 0x69, 0xb1, 0x90, 0x98, 0x1e, 0xcc, 0x35, 0x7a, 0xc8,
	0x4e, 0x91, 0x12, 0x41, 0x17, 0x07, 0x19, 0xae, 0xc4, 0x90, 0xc4, 0x06, 0x16, 0x36, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xbc, 0xa3, 0xd1, 0x74, 0xd1, 0x00, 0x00, 0x00,
}
